# Default values for assets.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

command: []
args: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

voluems: []
volumeMounts: []

readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 15
  periodSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  timeoutSeconds: 3
livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 15
  periodSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  timeoutSeconds: 3

env: {}
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.locimagePullSecreal

resources:
  # setting conservative limits since we will mostly be using nginx for serving static assets
  limits:
    memory: 50Mi
  requests:
    cpu: 50m
    memory: 50Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
